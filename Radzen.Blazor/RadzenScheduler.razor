@using Radzen
@using System.Globalization;
@using System.Linq.Dynamic.Core;
@using Microsoft.JSInterop
@inherits RadzenComponent

@typeparam TItem
@implements IScheduler

@if (Visible)
{
<CascadingValue Value="@this">
    @ChildContent
</CascadingValue>
    <div @ref=Element style=@Style @attributes=@Attributes class=@GetCssClass() id=@GetId()>
        <div class="rz-scheduler-nav">
            <div class="rz-scheduler-nav-prev-next btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">
                <div class="btn-group me-2" role="group" aria-label="First group">
                    <button class="btn btn-primary rz-prev" @onclick=@OnPrev><i class="fas fa-chevron-left"></i></button>
                    <button class="btn btn-primary rz-next" @onclick=@OnNext><i class="fas fa-chevron-right"></i></button>
                </div>
                <div class="btn-group me-2" role="group" aria-label="Second group">
                    <button class="btn btn-secondary rz-today" @onclick=@OnToday>@TodayText</button>
                </div>

            </div>

            <div class="rz-scheduler-nav-title">@SelectedView?.Title</div>
            <div class="rz-scheduler-nav-views btn-group me-2">
                <div class="btn-group flex-wrap" role="group" >
                    @foreach (var view in Views)
                    {
                        <button class="@($"btn {(IsSelected(view) ? "btn-primary" : "btn-outline-primary")}")" @onclick=@(args => OnChangeView(view))>@view.Text</button>
                    }
                </div>
                
            </div>
        </div>
        
        @SelectedView?.Render()
    </div>
}
