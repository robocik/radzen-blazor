@using Radzen
@using Radzen.Blazor.Rendering
@using System.Collections
@using System.Linq.Dynamic.Core
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.JSInterop

@inherits DataBoundFormComponent<string>

@if (Visible)
{
    <div @ref="@Element" style="@($"{Style};display:inline-block;")" @attributes="Attributes" class="@GetCssClass()" id="@GetId()">
        <span class="rz-autocomplete" style="width:100%">
            <input @ref="@search" @onkeydown="@OnFilterKeyPress" value="@Value" disabled="@Disabled"
                   onfocus="@OpenScript()" onkeypress="@OpenScript()" tabindex="@TabIndex"  @onchange="@OnChange"
                   aria-autocomplete="list" aria-haspopup="true" autocomplete="off" role="combobox"
                   class="@InputClassList"
                   type="text" id="@Name" aria-expanded="true" placeholder="@Placeholder" />
        </span><div id="@PopupID" class="rz-autocomplete-panel" style="display:none; transform: none; box-sizing: border-box; max-height: 200px;">
            <ul @ref="@list" class="rz-autocomplete-items rz-autocomplete-list" role="listbox">
                @if (!string.IsNullOrEmpty(searchText) || !string.IsNullOrEmpty(customSearchText))
                {
                    @foreach (var item in LoadData.HasDelegate ? Data != null ? Data : Enumerable.Empty<object>() : (View != null ? View : Enumerable.Empty<object>()))
                    {
                        <li role="option" class="rz-autocomplete-list-item" @onclick="@(() => OnSelectItem(item))" onmousedown="Radzen.activeElement = null">
                            <span>@PropertyAccess.GetItemOrValueFromProperty(item, TextProperty)</span>
                        </li>
                    }
                }
            </ul>
        </div>
    </div>
}
