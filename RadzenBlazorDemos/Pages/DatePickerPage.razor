@page "/datepicker"

<RadzenExample Name="DatePicker">
<div class="row px-3">
    <div class="col-lg-12 col-xl-8">
        <div class="row">
            <div class="col-lg-6 col-xl-4 p-3">
                <RadzenCard>
                    <h4 class="mb-4">DatePicker</h4>
                    <RadzenDatePicker @bind-Value=@value DateFormat="d" Change=@(args => OnChange(args, "DatePicker", "MM/dd/yyyy")) Class="w-100" />
                </RadzenCard>
            </div>
            <div class="col-lg-6 col-xl-4 p-3">
                <RadzenCard>
                    <h4 class="mb-4">DatePicker with time</h4>
                    <RadzenDatePicker TValue="DateTime?" ShowTime="true" ShowSeconds="true" HoursStep="1.5" MinutesStep="5" SecondsStep="10" Change=@(args => OnChange(args, "DatePicker with time", "MM/dd/yyyy HH:mm")) DateFormat="MM/dd/yyyy HH:mm" Class="w-100" />
                </RadzenCard>
            </div>
            <div class="col-lg-6 col-xl-4 p-3">
                <RadzenCard>
                    <h4 class="mb-4">12 hour time format</h4>
                    <RadzenDatePicker TValue="DateTime?" ShowTime="true" Change=@(args => OnChange(args, "DatePicker with 12 hour time format", "MM/dd/yyyy h:mm tt")) HourFormat="12" DateFormat="MM/dd/yyyy h:mm tt" Class="w-100" />
                </RadzenCard>
            </div>
            <div class="col-lg-6 col-xl-4 p-3">
                <RadzenCard>
                    <h4 class="mb-4">Time-only DatePicker</h4>
                    <RadzenDatePicker TValue="DateTime?" ShowTime="true" TimeOnly="true" DateFormat="HH:mm" Change=@(args => OnChange(args, "Time-only DatePicker", "HH:mm")) Class="w-100" />
                </RadzenCard>
            </div>
            <div class="col-lg-6 col-xl-4 p-3">
                <RadzenCard>
                    <h4 class="mb-4">DatePicker with steps for time</h4>
                    <RadzenDatePicker TValue="DateTime?" ShowTime="true" TimeOnly="true"
                                        ShowSeconds="true" HoursStep="1.5" MinutesStep="5" DateFormat="HH:mm:ss"
                                        SecondsStep="10" Change=@(args => OnChange(args, "DatePicker with steps for time", "HH:mm:ss")) Class="w-100" />
                </RadzenCard>
            </div>
            <div class="col-lg-6 col-xl-4 p-3">
                <RadzenCard>
                    <h4 class="mb-4">DatePicker with special dates</h4>
                    <RadzenDatePicker TValue="DateTime?" DateRender=@DateRenderSpecial Change=@(args => OnChange(args, "DatePicker with special dates", "MM/dd/yyyy")) Class="w-100" />
                </RadzenCard>
            </div>
            <div class="col-lg-6 col-xl-4 p-3">
                <RadzenCard>
                    <h4 class="mb-4">DatePicker with disabled dates</h4>
                    <RadzenDatePicker TValue="DateTime?" DateRender=@DateRender Change=@(args => OnChange(args, "DatePicker with disabled dates", "MM/dd/yyyy")) Class="w-100" />
                </RadzenCard>
            </div>
            <div class="col-lg-6 col-xl-4 p-3">
                <RadzenCard>
                    <h4 class="mb-4">Disabled DatePicker</h4>
                    <RadzenDatePicker Disabled="true" @bind-Value=@value Class="w-100" />
                </RadzenCard>
            </div>
        </div>
    </div>
    <div class="col-lg-12 col-xl-4 p-3">
        <RadzenCard style="overflow: scroll;">
            <h4 class="mb-4">Calendar</h4>
            <RadzenDatePicker TValue="DateTime?" Inline="true" Change="@(args => OnChange(args, "Calendar", "MM/dd/yyyy"))" />
        </RadzenCard>
    </div>
</div>
</RadzenExample>

<EventConsole @ref=@console Class="mt-4" />

@code {
    DateTime? value = DateTime.Now;

    IEnumerable<DateTime> dates = new DateTime[] { DateTime.Today.AddDays(-1), DateTime.Today.AddDays(1) };

    EventConsole console;

    void OnChange(DateTime? value, string name, string format)
    {
        console.Log($"{name} value changed to {value?.ToString(format)}");
    }

    void DateRenderSpecial(DateRenderEventArgs args)
    {
        if (dates.Contains(args.Date))
        {
            args.Attributes.Add("style", "background-color: #ff6d41; border-color: white;");
        }
    }

    void DateRender(DateRenderEventArgs args)
    {
        args.Disabled = dates.Contains(args.Date);
    }
}